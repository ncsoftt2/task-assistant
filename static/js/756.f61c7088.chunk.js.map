{"version":3,"file":"static/js/756.f61c7088.chunk.js","mappings":"0SAuDA,EAxCc,WACV,IAAOA,ECXa,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,KAmBjB,MAAO,CAACF,QAlBOG,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEhBC,SAAU,SAACC,EAAOC,GACdA,EAAcC,eAAc,GAC5BV,EAASW,EAAAA,GAAYC,MAAMJ,IACtBK,SACAC,OAAM,SAACC,GAA0B,IAADC,EACb,QAAhBA,EAAAD,EAAIE,oBAAY,IAAAD,GAAhBA,EAAkBE,SAAQ,SAACC,GACvB,OAAOV,EAAcW,cAAcD,EAAWE,MAAMF,EAAWG,MACnE,GACJ,IACJb,EAAcC,eAAc,EAChC,IAGR,CDVqBa,GAAVxB,OACP,OAAOyB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAASC,UAC5CJ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACI,MAAI,EAACF,eAAgB,SAASC,UAChCJ,EAAAA,EAAAA,KAAA,QAAMjB,SAAUR,EAAO+B,aAAaF,UAChCG,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAJ,SAAA,EACRG,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAAL,SAAA,EACNJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,8BACHJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,yBAEPG,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAN,SAAA,EACNJ,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,MAAM,QACNC,OAAO,SACPC,WAAYxC,EAAOyC,QAAQpC,OAASL,EAAO0C,OAAOrC,OAC9CL,EAAO2C,cAAc,YAEpClB,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACO,KAAK,WACLN,MAAM,WACNC,OAAO,SACPC,WAAYxC,EAAOyC,QAAQnC,UAAYN,EAAO0C,OAAOpC,UACjDN,EAAO2C,cAAc,eAEpClB,EAAAA,EAAAA,KAACoB,EAAAA,EAAgB,CAACP,MAAO,cAAeQ,SAASrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAQ,CACtDC,KAAK,aACLC,QAASjD,EAAOS,OAAOF,WACvB2C,SAAUlD,EAAOmD,kBAErB1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACHC,SAAUrD,EAAOsD,aACjBV,KAAM,SACNW,QAAS,YACTC,MAAO,UAAU3B,SAAC,qBAQ9C,C","sources":["features/auth/ui/Login.tsx","features/auth/ui/hooks/useLogin.ts"],"sourcesContent":["import React from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {RoutePath} from \"app/providers/router/ui/AppRouter\";\r\nimport { useAppSelector } from 'common/hooks/useAppSelector';\r\nimport { useLogin } from './hooks/useLogin';\r\nimport {authSelectors} from \"features/auth/index\";\r\n\r\nconst Login = () => {\r\n    const {formik} = useLogin()\r\n    return <Grid container justifyContent={'center'}>\r\n        <Grid item justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>Email: zrm1306@gmail.com</p>\r\n                        <p>Password: 111111</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField label=\"Email\"\r\n                                   margin=\"normal\"\r\n                                   helperText={formik.touched.email && formik.errors.email}\r\n                                   {...formik.getFieldProps('email')}\r\n                        />\r\n                        <TextField type=\"password\"\r\n                                   label=\"Password\"\r\n                                   margin=\"normal\"\r\n                                   helperText={formik.touched.password && formik.errors.password}\r\n                                   {...formik.getFieldProps('password')}\r\n                        />\r\n                        <FormControlLabel label={'Remember me'} control={<Checkbox\r\n                            name=\"rememberMe\"\r\n                            checked={formik.values.rememberMe}\r\n                            onChange={formik.handleChange}\r\n                        />}/>\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            type={'submit'}\r\n                            variant={'contained'}\r\n                            color={'primary'}>\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\nexport default Login","import {useFormik} from \"formik\";\r\nimport {authActions} from \"features/auth/index\";\r\nimport {useAppDispatch} from \"common/hooks/useAppDispatch\";\r\nimport {BaseResponseType} from \"common/types\";\r\n\r\nexport const useLogin = () => {\r\n    const dispatch = useAppDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: (values,formikHelpers) => {\r\n            formikHelpers.setSubmitting(true)\r\n            dispatch(authActions.login(values))\r\n                .unwrap()\r\n                .catch((err:BaseResponseType) => {\r\n                    err.fieldsErrors?.forEach((fieldError) => {\r\n                        return formikHelpers.setFieldError(fieldError.field,fieldError.error)\r\n                    })\r\n                })\r\n            formikHelpers.setSubmitting(false)\r\n        }\r\n    })\r\n    return {formik}\r\n}"],"names":["formik","dispatch","useAppDispatch","useFormik","initialValues","email","password","rememberMe","onSubmit","values","formikHelpers","setSubmitting","authActions","login","unwrap","catch","err","_err$fieldsErrors","fieldsErrors","forEach","fieldError","setFieldError","field","error","useLogin","_jsx","Grid","container","justifyContent","children","item","handleSubmit","_jsxs","FormControl","FormLabel","FormGroup","TextField","_objectSpread","label","margin","helperText","touched","errors","getFieldProps","type","FormControlLabel","control","Checkbox","name","checked","onChange","handleChange","Button","disabled","isSubmitting","variant","color"],"sourceRoot":""}