{"version":3,"file":"static/js/180.1ff9bff8.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","components/AddItemForm/AddItemForm.tsx","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","components/SkeletonTodoLists/ui/SkeletonTodoLists.tsx","features/TodoLists/ui/TodoLists.tsx","../node_modules/@mui/icons-material/Add.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import {Box, Button, TextField} from \"@mui/material\";\r\nimport {ChangeEvent, FC, memo, useState, KeyboardEvent} from \"react\";\r\nimport {makeStyles, Theme} from \"mui-styles\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst useAddItemFormStyles = makeStyles<Theme>(() => ({\r\n    customInput: {\r\n        '& .MuiInputBase-input': {\r\n            padding: '5px'\r\n        },\r\n        '& .MuiFormHelperText-root': {\r\n            width:\"300px\",\r\n            lineHeight: 1,\r\n            margin: 0,\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 40,\r\n            left: 0,\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgba(10,41,91,0.66)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'rgba(10,41,91,0.66)',\r\n                borderWidth: 1,\r\n            },\r\n        },\r\n    },\r\n    customButton: {\r\n        padding: 3,\r\n        width: '100%',\r\n        maxWidth:10,\r\n        borderColor: 'rgba(47,47,47,0.25)',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1\r\n    }\r\n}))\r\n\r\nexport type FormPropsType = {\r\n    callback: (title:string) => void\r\n    disabled?: boolean\r\n    maxLengthTitle: number\r\n}\r\n\r\nexport const AddItemForm:FC<FormPropsType> = memo(({callback,maxLengthTitle}) => {\r\n    const [value,setValue] = useState('')\r\n    const [error,setError] = useState(false)\r\n    const [lengthError,setLengthError] = useState(false)\r\n    const errorMessage = error && 'Enter title' || lengthError && `Max length symbols ${maxLengthTitle}`\r\n    const handleChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.currentTarget.value\r\n        if (error) {\r\n            setError(false)\r\n        }\r\n        if(target.length > maxLengthTitle) {\r\n            setLengthError(true)\r\n        }else if(lengthError){\r\n            setLengthError(false)\r\n        }\r\n        setValue(target)\r\n    }\r\n    const handleClick = () => {\r\n        const trimValue = value.trim()\r\n        if(trimValue.length !== 0 && value.length <= maxLengthTitle) {\r\n            callback(value)\r\n            setValue('')\r\n        } else if (trimValue.length === 0) {\r\n            setError(true)\r\n        } else if(trimValue.length > maxLengthTitle) {\r\n            setLengthError(true)\r\n        }\r\n    }\r\n    const addNewItemOnEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter') handleClick()\r\n    }\r\n    const classes = useAddItemFormStyles()\r\n    return (\r\n        <Box sx={{display:'flex',alignItems:'center'}}>\r\n            <TextField id=\"outlined-basic\"\r\n                       className={classes.customInput}\r\n                       value={value}\r\n                       onChange={handleChange}\r\n                       error={lengthError || error}\r\n                       helperText={errorMessage}\r\n                       onKeyDown={addNewItemOnEnter}\r\n            />\r\n            <Button className={classes.customButton} onClick={handleClick} disabled={error || lengthError}>\r\n                <AddIcon/>\r\n            </Button>\r\n        </Box>\r\n\r\n    )\r\n})","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import {Box, Grid, Paper, Skeleton} from \"@mui/material\";\r\nimport * as React from \"react\";\r\nexport const SkeletonTodoLists = () => {\r\n    return (\r\n        <>\r\n            {[1,2,3].map((el) => {\r\n                return (\r\n                    <Grid item sx={{p:1}} md={6} lg={4} sm={6} xs={12} key={el}>\r\n                        <Paper elevation={5} sx={{p: 1,margin:\"0 auto\"}}>\r\n                            <Box sx={{maxWidth:'300px',margin:'0 auto' }}>\r\n                                <Box sx={{minWidth: '100px',maxWidth:'200px',textAlign:'center',margin:'0 auto'}}>\r\n                                    <Skeleton />\r\n                                </Box>\r\n                                <Box sx={{textAlign:'center',margin:'0 auto'}}>\r\n                                    <Skeleton />\r\n                                </Box>\r\n                                <Skeleton animation=\"wave\" />\r\n                                <Box sx={{textAlign:'center',margin:'0 auto'}}>\r\n                                    <Skeleton />\r\n                                </Box>\r\n                                <Skeleton animation={false} />\r\n                            </Box>\r\n                        </Paper>\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","import {Box, Container, Grid, Paper} from \"@mui/material\"\r\nimport { AddItemForm } from \"components/AddItemForm/AddItemForm\"\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport * as React from \"react\";\r\nimport {useActions, useAppDispatch, useAppSelector} from \"app/store\";\r\nimport {TodoList, todoListActions, todoSelectors} from \"../index\";\r\nimport { fetchTodoTC } from \"../service/thunk/fetchTodoList\";\r\nimport {SkeletonTodoLists} from \"components/SkeletonTodoLists\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nconst TodoLists:React.FC<PropsType> = ({demo = false}) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const todoList = useAppSelector(todoSelectors.todoListSelector)\r\n    const {createTodoTC} = useActions(todoListActions)\r\n    const dispatch = useAppDispatch()\r\n    const addNewTodo = useCallback((title:string) => createTodoTC(title),[])\r\n    const elements = todoList.map(todo => {\r\n        return (\r\n            <Grid item sx={{p:1}} md={6} lg={4} sm={6} xs={12} key={todo.id}>\r\n                <Paper elevation={5} sx={{p: 1,margin:\"0 auto\"}}>\r\n                    <TodoList\r\n                        key={todo.id}\r\n                        todoList={todo}\r\n                        demo={demo}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    })\r\n    useEffect(() => {\r\n        if(!demo) {\r\n            setLoading(true)\r\n            dispatch(fetchTodoTC())\r\n                .finally(() => setLoading(false))\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"lg\" disableGutters>\r\n                <Box sx={{display:'flex',justifyContent:'center',margin:'15px 0 30px'}}>\r\n                    <AddItemForm maxLengthTitle={20} callback={addNewTodo} />\r\n                </Box>\r\n                <Grid container sx={{margin:'10px 0'}}>\r\n                    {\r\n                        loading\r\n                            ? <SkeletonTodoLists/>\r\n                            : elements\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default TodoLists\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","_jsx","as","clsx","createContainer","styled","useAddItemFormStyles","makeStyles","customInput","padding","lineHeight","margin","position","top","left","borderColor","borderWidth","customButton","borderStyle","AddItemForm","memo","callback","maxLengthTitle","_useState","useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","error","setError","_useState5","_useState6","lengthError","setLengthError","errorMessage","handleClick","trimValue","trim","_jsxs","Box","sx","alignItems","children","TextField","id","onChange","e","target","currentTarget","helperText","onKeyDown","key","Button","onClick","disabled","AddIcon","getUnit","input","match","toUnitless","parseFloat","getSkeletonUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","_taggedTemplateLiteral","waveKeyframe","SkeletonRoot","variant","animation","hasChildren","withChildren","fitContent","height","heightAuto","radiusUnit","shape","borderRadius","radiusValue","backgroundColor","vars","palette","Skeleton","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","round","content","visibility","_ref2","css","action","hover","_props$animation","style","_props$variant","Boolean","SkeletonTodoLists","_Fragment","map","el","Grid","item","p","md","lg","sm","Paper","elevation","minWidth","textAlign","_ref$demo","demo","loading","setLoading","todoList","useAppSelector","todoSelectors","createTodoTC","useActions","todoListActions","dispatch","useAppDispatch","addNewTodo","useCallback","title","elements","todo","TodoList","useEffect","fetchTodoTC","finally","justifyContent","container","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}